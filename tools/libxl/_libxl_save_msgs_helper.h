/* AUTOGENERATED by libxl_save_msgs_gen.pl DO NOT EDIT */

typedef struct libxl__srm_save_autogen_callbacks {
    void (*suspend)(void *user);
    void (*postcopy)(void *user);
    void (*checkpoint)(void *user);
    void (*wait_checkpoint)(void *user);
    void (*switch_qemu_logdirty)(uint32_t domid, unsigned enable, void *user);
} libxl__srm_save_autogen_callbacks;

struct save_callbacks;
typedef struct libxl__srm_restore_autogen_callbacks {
    void (*suspend)(void *user);
    void (*postcopy)(void *user);
    void (*checkpoint)(void *user);
    void (*wait_checkpoint)(void *user);
    void (*restore_results)(xen_pfn_t store_gfn, xen_pfn_t console_gfn, void *user);
} libxl__srm_restore_autogen_callbacks;

struct restore_callbacks;
unsigned char * helper_allocbuf(int len, void *user);
int helper_getreply(void *user);
void helper_setcallbacks_restore(struct restore_callbacks *cbs, unsigned cbflags);
void helper_setcallbacks_save(struct save_callbacks *cbs, unsigned cbflags);
int helper_stub_checkpoint(void *user);
int helper_stub_complete(int retval, int errnoval, void *user);
void helper_stub_log(uint32_t level, uint32_t errnoval, const char *context, const char *formatted, void *user);
int helper_stub_postcopy(void *user);
void helper_stub_progress(const char *context, const char *doing_what, unsigned long done, unsigned long total, void *user);
void helper_stub_restore_results(xen_pfn_t store_gfn, xen_pfn_t console_gfn, void *user);
int helper_stub_suspend(void *user);
int helper_stub_switch_qemu_logdirty(uint32_t domid, unsigned enable, void *user);
int helper_stub_wait_checkpoint(void *user);
void helper_transmitmsg(unsigned char *msg_freed, int len, void *user);
